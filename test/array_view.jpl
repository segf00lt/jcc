#run main();

proc test(v: []int) {
    i: u64 = 0;
    while i < v.count {
        if i % 2 == 0 print_int(v.data[i]);
        else print_int(v[i]);
        putchar(32);
        i++;
    }
    putchar();
}

proc print_float(f: float);

proc give_back_bigger(a: []int, b: []int) []int {
    if a.count > b.count return a;
    else return b;
}

proc print_int(n: int) {
    buf: [64]char = ---;
    reversed_buf: [buf.count]char = ---;

    i := 0;

    c := n % 10 + 48;
    n /= 10;
    buf[i] = c;
    i++;

    while n > 0 {
        c = n % 10 + 48;
        n /= 10;
        buf[i] = c;
        i++;
    }

    j := 0;

    while i > 0 {
        i--;
        reversed_buf[j] = buf[i];
        j++;
    }

    k := 0;
    while k < j {
        putchar(cast(s32)reversed_buf[k]);
        k++;
    }
}

proc putchar(c: s32 = 10) s32 #system;

proc main() {
    test([2,4,5,7,3]);
    test([5, 6, 7, 8]);
    arr := [4, 5, 2, 6, 4, 1, 3, 5, 7, 8];
    mat := [
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9],
    ];
    test(arr);
    test(mat[2]);
    test(mat[1]);
    test(mat[0]);

    v: []int = mat[0];

    test(v);
    v = arr;
    test(v);
    v = int:[7, 7, 7, 3, 5, 1, 2];
    test(v);
    arr2 := [0, 0, 0, 1];
    test(v);

    arr2[0] = 1;
    test(arr2);
    big_view := give_back_bigger(arr, mat[2]);
    big_view[0] = 5150;
    test(big_view);
    big_view[2] = big_view[0];
    print_int(big_view[2]);
    putchar();
    test(big_view);
}

proc write(fd: s32, buf: *void, bytes: size_t) size_t #system;

size_t :: u64;
STDOUT :: 0;

