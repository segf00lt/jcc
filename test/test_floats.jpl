proc foo(a: float, b: float) float {
    vals: [12]float;
    i := 0;
    while i < cast(int)vals.count {
        vals[i] = a * cast(float)i;
        a *= b;
        i++;
    }

    return vals[i-1];
}

#run lerp(0.0, 11.0, 0.287);

proc lerp(start: float, end: float, t: float) float {
    result := start + t*(end - start);
    return result;
}

#run foo(2.0, 3.0);
