proc main() {
    arr: [..]int;
    buf: [12]int;
    arr.data = buf.data;
    arr.cap  = sizeof(buf);
    arr[0] = 12;
    array_int_push(@arr, 13);
    array_int_push(@arr, 15);
    array_int_push(@arr, 32);

    arrp: *[..]int = @arr;
    print("arrp[%] = %\narrp.count = %\n", 0, arrp[][0], arrp.count);

    i: int = 0;
    print("arr = [");
    while i < arr.count - 1 {
        defer i++;
        print("%, ", arr[i]);
    }
    print("%]\n", arr[arr.count-1]);

    arr2: [..]int;
    arr3: [..]int;
    arr2 = arr3;

    arr4 := array_int_make(53);
    print("arr4.cap = %\n", arr4.cap);

    arr4 = array_int_make(12);
    print("arr4.cap = %\n", arr4.cap);

    print("\n===========================================\n\n");
    
    array_of_int: [..]int;
    arr_push(@array_of_int, 3);
    arr_push(@array_of_int, 2);
    arr_push(@array_of_int, 1);

    i = 0;
    print("array_of_int = [");
    while i < array_of_int.count - 1 {
        defer i++;
        print("%, ", array_of_int[i]);
    }
    print("%]\n", array_of_int[array_of_int.count-1]);

    print("\n===========================================\n\n");

    array_of_int2: [..]int;
    arr_push(@array_of_int2, 3);
    arr_push(@array_of_int2, 2);
    arr_push(@array_of_int2, 1);

    i = 0;
    print("array_of_int2 = [");
    while i < array_of_int2.count - 1 {
        defer i++;
        print("%, ", array_of_int2[i]);
    }
    print("%]\n", array_of_int2[array_of_int2.count-1]);

    print("\n===========================================\n\n");
    
    
    array_of_float: [..]float;
    arr_push(@array_of_float, 4);
    arr_push(@array_of_float, 3);
    arr_push(@array_of_float, 2);
    arr_push(@array_of_float, 1);

    i = 0;
    print("array_of_float = [");
    while i < array_of_float.count - 1 {
        defer i++;
        print("%, ", array_of_float[i]);
    }
    print("%]\n", array_of_float[array_of_float.count-1]);

    print("\n===========================================\n\n");

    print("freeing arrays\n\n");
    
    arr_free(@array_of_int);
    arr_free(@array_of_float);
    print("array_of_int.count = %\narray_of_int.cap = %\n", array_of_int.count, array_of_int.cap);
    print("array_of_float.count = %\narray_of_float.cap = %\n", array_of_float.count, array_of_float.cap);
}

proc array_int_make(cap: u64) [..]int {
    arr: [..]int;
    arr.cap = cap;
    return arr;
}

proc array_int_push(arr: *[..]int, x: int) {
    arr[][arr.count] = x;
    arr.count++;
}

#run main();
